#summary Because three levels connected are lame.
#labels Phase-Design,Omega2

= Introduction =

Here is a typical GADT-style `data` declaration:
{{{
data Bool :: * where
  False :: Bool
  True :: Bool
}}}
I.e. three levels appear connected by typing annotation `False :: Bool :: *`. Pretty boring.

However, even dependently typed languages don't allow (nontrivial) connection of more levels.

For Î©mega2, I'd like to allow cascaded `data` declarations.


= Cascaded `data` Declarations =

For eventual higher kind `*1` (or higher) one could declare
{{{
data Baz :: *1 ~> *1 where
  data Bar :: *0 ~> Baz *0 where
    Foo :: Bar Int
    Quux :: a -> Bar a
  Howdy :: Baz b
}}}

This way we would get a user-defined four-level construct `Foo :: Bar Int :: Baz *0 :: *1`. Consequently `Foo` lives on the value (i.e. runtime) level.